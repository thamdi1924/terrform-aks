# Azure DevOps pipeline for Azure deployment

variables:
  group: test
  service_connection: 'sc-terraform3'

trigger:
  - main
 
pool:
  vmImage: ubuntu-latest

stages:
- stage: install_deploy_helm
  displayName: install and deploy helm
  jobs:
  - job: install_helm_add_repo_install_chart
    steps:
    - task: HelmInstaller@0
      inputs:
       helmVersion: '2.14.1'
       installKubectl: true
    - task: helm@1
      inputs:
        subCommand: 'repo'
        arguments: 'add bitnami https://charts.bitnami.com/bitnami'



    # - task: HelmDeploy@0
    #   inputs:
    #     connectionType: 'Kubernetes Service Connection'
    #     kubernetesServiceConnection: 'sc-aks-serviceaccount'
    #     command: 'uninstall'
    #     # chartType: 'Name'
    #     # chartName: 'bitnami/nginx'
    #     releaseName: 'nginx'

      
    # - task: AzureCLI@2
    #   inputs:
    #     azureSubscription: 'sc-azurearm'
    #     scriptType: 'bash'
    #     scriptLocation: 'inlineScript'
    #     inlineScript: 
    #      'az acr import --name sc-acr-stcs-basic --source quay.io/strimzi/kafka:0.31.1-kafka-3.2.3 --image strimzi/kafka:0.31.1-kafka-3.2.3'


- stage: Deploy_kubectl_commands
  displayName: Deploy kubectl commands
  jobs:
  - job: execute_kubectl_commands
    steps:
    # - task: Kubernetes@1
    #   inputs:
    #     connectionType: 'Kubernetes Service Connection'
    #     kubernetesServiceEndpoint: 'sc-aks-serviceaccount'
    #     command: 
    #     useConfigurationFile: true
    #     configurationType: 'inline'
    #     inline: |
    #       apiVersion: v1
    #       kind: Service
    #       metadata:
    #         name: service-mllp-http-2
    #         annotations:
    #           service.beta.kubernetes.io/azure-load-balancer-internal: "true"
    #       spec:
    #         type: LoadBalancer
    #       S # loadBalancerIP: 100.67.68.197
    #         ports:
    #         - port: 2577
    #         selector:
    #           app: mllp-http
    #     secretType: 'dockerRegistry'
    #     containerRegistryType: 'Azure Container Registry'

      
    - task: KubernetesManifest@0
      inputs:
        action: 'deploy'
        kubernetesServiceConnection: 'sc-aks-subscription'
        namespace: 'default'
        manifests: 
          Mllp-http/deploy-mllp-http-app.yaml

    # - task: Docker@2
    #   inputs:
    #     containerRegistry: 'sc-acr-stcs-basic'
    #     repository: 'nginx'
    #     command: 'push'
    #     arguments: 'mcr.microsoft.com/oss/nginx/nginx:1.15.5-alpine'